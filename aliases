# Alternatives to nvim
alias v="nvim"
alias neovim="nvim"

# Git composed aliases
alias pull="git fetch && git pull"

# Environment
alias spark="cd ~/.spark"
alias C="cd ~/Code"

# Work Projects
alias CA="cd ~/Code/crashanalytics/ui"
alias KAS="cd ~/Code/mbdl/ui"
alias D="cd ~/Code/tools-docker/"

# Git Aliases
g=git
g..='cd "$(git-root || print .)"'
gCO='gCo $(gCl)'
gCT='gCt $(gCl)'
gCa='git add $(gCl)'
gCe='git mergetool $(gCl)'
gCl='git --no-pager diff --diff-filter=U --name-only'
gCo='git checkout --ours --'
gCt='git checkout --theirs --'
gR='git remote'
gRa='git remote add'
gRl='git remote --verbose'
gRm='git remote rename'
gRp='git remote prune'
gRs='git remote show'
gRu='git remote update'
gRx='git remote rm'
gS='git submodule'
gSI='git submodule update --init --recursive'
gSa='git submodule add'
gSf='git submodule foreach'
gSi='git submodule init'
gSl='git submodule status'
gSm=git-submodule-move
gSs='git submodule sync'
gSu='git submodule foreach git pull origin master'
gSx=git-submodule-remove
gb='git branch'
gbL='git branch --all -vv'
gbM='git branch --move --force'
gbS='git show-branch --all'
gbX='git-branch-delete-interactive --force'
gbc='git checkout -b'
gbl='git branch -vv'
gbm='git branch --move'
gbs='git show-branch'
gbx=git-branch-delete-interactive
gc='git commit --verbose'
gcF='git commit --verbose --amend'
gcO='git checkout --patch'
gcP='git cherry-pick --no-commit'
gcR='git reset "HEAD^"'
gcS='git commit -S'
gca='git commit --verbose --all'
gcf='git commit --amend --reuse-message HEAD'
gcm='git commit --message'
gco='git checkout'
gcp='git cherry-pick --ff'
gcr='git revert'
gcs='git show --pretty=format:"${_git_log_medium_format}"'
gcv='git verify-commit'
gd='git ls-files'
gdc='git ls-files --cached'
gdi='git status --porcelain --short --ignored | sed -n "s/^!! //p"'
gdk='git ls-files --killed'
gdm='git ls-files --modified'
gdu='git ls-files --other --exclude-standard'
gdx='git ls-files --deleted'
get='curl --continue-at - --location --progress-bar --remote-name --remote-time'
gf='git fetch'
gfc='git clone'
gfm='git pull'
gfr='git pull --rebase'
gfu='git fetch --all --prune && git merge --ff-only @\{u\}'
gg='git grep'
ggL='git grep --files-without-match'
ggi='git grep --ignore-case'
ggl='git grep --files-with-matches'
ggv='git grep --invert-match'
ggw='git grep --word-regexp'
giA='git add --patch'
giD='git diff --no-ext-diff --cached --word-diff'
giR='git reset --patch'
giX='git rm --cached -rf'
gia='git add'
gid='git diff --no-ext-diff --cached'
gir='git reset'
giu='git add --update'
gix='git rm --cached -r'
gl='git log --topo-order --pretty=format:"${_git_log_medium_format}"'
glG='git log --topo-order --all --graph --pretty=format:"${_git_log_oneline_medium_format}"'
glO='git log --topo-order --pretty=format:"${_git_log_oneline_medium_format}"'
glc='git shortlog --summary --numbered'
gld='git log --topo-order --stat --patch --full-diff --pretty=format:"${_git_log_medium_format}"'
glg='git log --topo-order --all --graph --pretty=format:"${_git_log_oneline_format}"'
glo='git log --topo-order --pretty=format:"${_git_log_oneline_format}"'
globurl='noglob urlglobber '
gls='git log --topo-order --stat --pretty=format:"${_git_log_medium_format}"'
glv='git log --topo-order --show-signature --pretty=format:"${_git_log_medium_format}"'
gm='git merge'
gmC='git merge --no-commit'
gmF='git merge --no-ff'
gma='git merge --abort'
gmt='git mergetool'
gp='git push'
gpA='git push --all && git push --tags'
gpF='git push --force'
gpa='git push --all'
gpc='git push --set-upstream origin "$(git-branch-current 2> /dev/null)"'
gpf='git push --force-with-lease'
gpp='git pull origin "$(git-branch-current 2> /dev/null)" && git push origin "$(git-branch-current 2> /dev/null)"'
gpt='git push --tags'
gr='git rebase'
gra='git rebase --abort'
grc='git rebase --continue'
grep='grep --color=auto'
gri='git rebase --interactive'
grs='git rebase --skip'
gs='git stash'
gsS='git stash save --patch --no-keep-index'
gsX=git-stash-clear-interactive
gsa='git stash apply'
gsd='git stash show --patch --stat'
gsl='git stash list'
gsp='git stash pop'
gsr=git-stash-recover
gss='git stash save --include-untracked'
gsu='git stash show --patch | git apply --reverse'
gsw='git stash save --include-untracked --keep-index'
gsx='git stash drop'
gt='git tag'
gts='git tag --sign'
gtv='git verify-tag'
gtx='git tag --delete'
gwC='git clean -d --force'
gwD='git diff --no-ext-diff --word-diff'
gwR='git reset --hard'
gwS='git status'
gwX='git rm -rf'
gwc='git clean --dry-run'
gwd='git diff --no-ext-diff'
gwr='git reset --soft'
gws='git status --short'
gwx='git rm -r'
